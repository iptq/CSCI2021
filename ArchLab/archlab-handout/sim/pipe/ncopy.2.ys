# Saumik Narayanan
# naray114@umn.edu
# 4815779

#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
  # Loop header
  xorq %rax,%rax    # count = 0;
  andq %rdx,%rdx    # len <= 0?
  jle Done          # if so, goto Done:
  iaddq $-2,%rdx
  jl len_cleanup

Loop:
  mrmovq (%rdi),   %r8   # read val from src[0]...
  mrmovq 8(%rdi),  %r9   # read val from src[1]...

  rmmovq %r8,  (%rsi)    # ...and store it to dst[0]
  rmmovq %r9,  8(%rsi)   # ...and store it to dst[1]

  andq %r8, %r8          # val <= 0?
  jle Skip1              # if so, goto Skip1:
  iaddq $1, %rax         # count++

Skip1:
  andq %r9,%r9      # src[1] <= 0?
  jle Skip2         # if so, goto Loop:
  iaddq $1,%rax     # count++

Skip2:
  iaddq $16, %rdi   # *src+=2
  iaddq $16, %rsi   # *dst+=2
  iaddq $-2, %rdx   # len-=2
  jge Loop          # if len >= 2, goto Loop

len_cleanup:
  iaddq $2, %rdx

cleanup:
  iaddq $-1,%rdx        # len--
  jl Done               # if len < 0, nothing to cleanup
  mrmovq (%rdi),%r8    # read val from src[0]
  rmmovq %r8, (%rsi)   # store val from src[0] to dst[0]
  andq %r8,%r8          # val <= 0?
  jle Done              # if so, skip count++
  iaddq $1,%rax         # count++

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
  ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
